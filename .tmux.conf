# Disclaimer: following config is adapted for Dvorak layout
# https://github.com/vbauerster/PDvorak

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# set-option [-aFgopqsuw] [-t target-pane] option value
#               (alias: set)
#         Set a pane option with -p, a window option with -w, a server option with -s, oth-
#         erwise a session option.  If the option is not a user option, -w or -s may be
#         unnecessary - tmux will infer the type from the option name, assuming -w for pane
#         options.  If -g is given, the global session or window option is set.

# Server options
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
set-option -s history-file ~/.tmux/history

# Add truecolor support (tmux info | rg Tc)
# https://wiki.archlinux.org/index.php/Tmux#24-bit_color
# set-option -sa terminal-overrides ',xterm-256color:Tc'
set-option -sa terminal-overrides "xterm-256color:Tc"

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 25

# Session options
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
set-option -g default-terminal "tmux-256color"

# <S-Home><S-End>
# set-option -ga terminal-overrides ',xterm-256color:kEND=\E[F:kHOM=\E[H'

# Use xterm keycodes for Shift-F1 etc (for Vim).
# https://wiki.archlinux.org/index.php/Tmux#xterm-keys
set-option -g xterm-keys on

# increase scrollback buffer size
set-option -g history-limit 20000
 
set-option -g display-time 1500

set-option -g display-panes-time 3000

# Terminal emulator window title
set-option -g set-titles on
# default one: set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
set-option -g set-titles-string "#T"

# unbind-key C-b (the default prefix)
unbind-key C-b
# C-b is not acceptable as a prefix, neither C-a, because both are used by Vim
# http://superuser.com/a/178223/578741
set-option -g prefix M-Space

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-option -g status-keys emacs

# requires by 'roxma/vim-tmux-clipboard'
# focus events enabled for terminals that support them
set-option -g focus-events on

# start window numbers at 1 to match keyboard order with tmux window order
# set-option -g base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# increase scrollback lines
set-option -g history-limit 14000

set-option -g mouse on

# Window options: show -wg
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾
set-option -wg mode-keys vi

# super useful when using "grouped sessions" and multi-monitor setup
set-option -wg aggressive-resize on

# visual notification of activity in other windows
set-option -wg monitor-activity on
# set -wg visual-activity on

# auto rename
set-option -wg automatic-rename on
# https://unix.stackexchange.com/questions/235272/format-tmuxs-pane-current-path/393072#393072
# The default  window-status-format is `#I:#W#F'
# set-option -wg automatic-rename-format "#{b:pane_current_path}"
# set-option -wg automatic-rename-format "#{=16:pane_title}"
set-option -wg automatic-rename-format "#{b:pane_title}"

set-buffer -b mail vbauerster@gmail.com

# Key bindings
# ‾‾‾‾‾‾‾‾‾‾‾‾
# bind-key C-Space send-prefix
bind-key @ paste-buffer -b mail
bind-key F1 lsk -Tprefix

# bind-key -n C-_ command-prompt
bind-key e command-prompt

bind-key C new-window -c "#{pane_current_path}"

# Edit configuration and reload
bind-key C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# shortcut for reloading config
bind-key C-r source-file ~/.tmux.conf \; display-message "[tmux #{version}] reloaded"

# fzf-locate
# https://github.com/junegunn/fzf/wiki/Examples-(tmux)
# bind-key / run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# Capture pane and open in kakoune
bind-key C-b run 'tmux capture-pane -S -10000 -p > /tmp/tmux-capture.txt' \; new-window "\${EDITOR:-vim} /tmp/tmux-capture.txt"

# Rename session and window
bind-key r command-prompt -I "#W" "rename-window -- '%%'"
bind-key R command-prompt -I "#S" "rename-session -- '%%'"

# set pane's arbitrary background
bind-key g command-prompt -p "set bg:" -I "colour255" "select-pane -P 'bg=%%'"

# default: Space next-layout
# bind-key C-n switch-client -n
# bind-key C-p switch-client -p
# default: l last-window
bind-key Tab switch-client -l
bind-key Space last-window

# will be overriden on macos
# bind-key Tab display-panes

bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key M-X confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key C-x confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind-key C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind-key D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
# bind-key C-s if -F '#{s/off//:status}' 'set status off' 'set status on'
bind-key M-s if -F '#{==:#{status},on}' 'set status off' 'set status on'

# Synchronize panes
# https://sanctum.geek.nz/arabesque/sync-tmux-panes/
bind-key Z set-option -w synchronize-panes \; display-message "synchronize-panes: #{?synchronize-panes,on,off}"

# pane movement
# http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
# bind-key j command-prompt -p "join pane from:"  "join-pane -s ':%%'"
# bind-key @ command-prompt -p "send pane to:"  "join-pane -t ':%%'"

# Marked pane must be present (prefix-m), for the following to work
# The marked pane will be used as -s src-pane, whereas -t dst-pane is active pane
# join the last active pane/window to the current window.
bind-key M-m join-pane -h
bind-key T break-pane
bind-key t join-pane -hs !
bind-key C-t clock
# set-hook -g after-join-pane "select-layout even-horizontal"
# set-hook -g after-join-pane "display-panes"

# Link window
# bind l command-prompt -p "Link window from (session:window):" "link-window -s %% -a"

# swap the last active pane/window with the current window.
# bind-key C-s swap-pane -s !
# bind-key s swap-pane -D
# bind-key S swap-pane -U

# Swap panes back and forth with zero pane
bind \; if "[ #P -eq 0 ]" "swap-pane -s !" {
    select-pane -t:.0
    swap-pane -d -t 0 -s !
}

# bind-key W choose-tree -Zs

# jump between panes
bind-key -r ] select-pane -t :.+
bind-key -r [ select-pane -t :.-
bind-key o last-pane -Z
bind-key O last-pane \; resize-pane -Z
bind-key Q display-panes

# for PDvorak
bind-key BSpace select-window -t :=0
bind-key F1 select-window -t :=1
bind-key F2 select-window -t :=2
bind-key F3 select-window -t :=3
bind-key F4 select-window -t :=4
bind-key F5 select-window -t :=5
bind-key F6 select-window -t :=6
bind-key F7 select-window -t :=7
bind-key F8 select-window -t :=8
bind-key F9 select-window -t :=9
bind-key 0 select-pane -t :.0
bind-key 1 select-pane -t :.1
bind-key 2 select-pane -t :.2
bind-key 3 select-pane -t :.3
bind-key 4 select-pane -t :.4
bind-key 5 select-pane -t :.5
bind-key 6 select-pane -t :.6
bind-key 7 select-pane -t :.7
bind-key 8 select-pane -t :.8
bind-key 9 select-pane -t :.9

# pane_resizing_bindings
# https://github.com/tmux-plugins/tmux-pain-control
bind-key -r H resize-pane -L 4
bind-key -r U resize-pane -R 4
bind-key -r J resize-pane -D 4
bind-key -r K resize-pane -U 4

# pane_split_bindings
# https://github.com/tmux-plugins/tmux-pain-control/blob/master/screenshots/pane_splitting.gif

# -d stay in original pane
# -b option causes the new pane to be created to the left of or above target-pane
# -v a vertical split (default)
# -h a horizontal split
bind-key a split-window -h -c "#{pane_current_path}"
bind-key M-a split-window -hb -c "#{pane_current_path}"
bind-key A split-window -hf -c "#{pane_current_path}"
bind-key M-A split-window -hbf -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key M-- split-window -vb -c "#{pane_current_path}"
bind-key _ split-window -vf -c "#{pane_current_path}"
bind-key M-_ split-window -vbf -c "#{pane_current_path}"

# window_move_bindings
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key -r C-n swap-window -d -t :+
bind-key -r C-p swap-window -d -t :-
bind-key C-a swap-window -d -t 0

# pane_navigation_bindings
bind-key h select-pane -L
bind-key u select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U

# layout mode
unbind-key -Tprefix M-1
unbind-key -Tprefix M-2
unbind-key -Tprefix M-3
unbind-key -Tprefix M-4
unbind-key -Tprefix M-5
bind-key -Tlayout F1 select-layout even-horizontal
bind-key -Tlayout F2 select-layout even-vertical
bind-key -Tlayout F3 select-layout main-horizontal
bind-key -Tlayout F4 select-layout main-vertical
bind-key -Tlayout F5 select-layout tiled
bind-key -Tlayout h  select-layout even-horizontal
bind-key -Tlayout v  select-layout even-vertical
bind-key -Tlayout H  select-layout main-horizontal
bind-key -Tlayout V  select-layout main-vertical
bind-key -Tlayout t  select-layout tiled
bind-key -Tlayout e  select-layout -E
bind-key -Tlayout -r + next-layout
bind-key -Tlayout -r - previous-layout
bind-key -n C-_ switch-client -Tlayout
# bind-key '=' select-layout -E

# copy-mode-vi bindings
# https://github.com/tmux/tmux/issues/592
# https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
# v     = rectangle-toggle
# space = begin-selection
# Enter = copy-selection-and-cancel
# C-d   = halfpage-down
# C-u   = halfpage-up

bind-key -Tcopy-mode-vi y send -X copy-selection
bind-key -Tcopy-mode-vi J send -X -N4 cursor-down
bind-key -Tcopy-mode-vi K send -X -N4 cursor-up

# '[' copy-mode
# ']' paste-buffer
# '#' list-buffers
# '=' choose-buffer -Z
bind-key Enter copy-mode
bind-key y paste-buffer
bind-key \" choose-buffer -Z

set-option -g status-left "#S:"

# ==============================================
# ===   Nesting local and remote sessions    ===
# ==============================================
# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

#wg_is_keys_off="#[fg=colour255,bg=magenta,bold]#([ $(tmux show -qv key-table) = 'off' ] && echo ' OFF ')#[default]"
wg_is_keys_off="#[fg=colour255,bg=magenta,bold]#{?#{==:#{key-table},off}, OFF ,}#[default]"

set-option -g status-right "$wg_is_keys_off#{prefix_highlight}#{cpu_bg_color}#{cpu_fg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M "

# Also, change some visual styles when window keys are off
bind-key -Troot F12 {
    set prefix None
    set key-table off
    if -F "#{pane_in_mode}" "send-keys -X cancel"
    set status-position top
    refresh-client -S
}

bind-key -Toff F12 {
    set -u prefix
    set -u key-table
    set status-position bottom
    refresh-client -S
}

# macos specific
source-file -q ~/.tmux/tmux-macos.conf
# theme
source-file -q ~/.tmux/tmux-theme-light.conf

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'Morantron/tmux-fingers'

set -g @tpm-update !
set -g @fingers-key &
set -g @fingers-keyboard-layout dvorak
set -g @prefix_highlight_show_copy_mode on
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
